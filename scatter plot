#scatter plot with trendlines and statistical annotations
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import linregress

# Load data from an Excel file
file_path = "C:/Users/DELL/Documents/research_doctoral/hboengineering/by_point.xlsx"  
sheet_name = "vcd"
df = pd.read_excel(file_path, sheet_name=sheet_name, engine="openpyxl", parse_dates=["datetime"])


df = df.dropna(subset=['no2', 'so2'])  # Drop rows with NaN values in relevant columns

# Scatter plot with trendline and statistics
plt.figure(figsize=(10, 6))

# Scatter plot
ax = sns.scatterplot(x=df['no2'], y=df['so2'], color='blue', s=50)

# Force axes to start at 0
ax.set_xlim(left=0)  
ax.set_ylim(bottom=0)

# Compute regression line and statistics
slope, intercept, r_value, p_value, std_err = linregress(df['no2'], df['so2'])

# Add trendline
trendline = slope * df['no2'] + intercept
plt.plot(df['no2'], trendline, color='red', linestyle='--', label=f"Trendline")

# Compute confidence intervals (95% confidence)
x_vals = df['no2']
y_vals = trendline

# Annotate statistical information
stats_text = f"R = {r_value:.2f}\nR² = {r_value**2:.2f}\nP-value = {p_value:.2e}\nStd Err = {std_err:.2f}"
plt.annotate(stats_text, xy=(0.03, 0.85), xycoords='axes fraction', fontsize=12, bbox=dict(boxstyle="round,pad=0.3", edgecolor='black', facecolor='white'))

# Labels and title
plt.xlabel('pandora NO$_2$ VCD (moles·m$^{-2}$)')
plt.ylabel('pandora SO$_2$ VCD (moles·m$^{-2}$)')

# Add legend
plt.legend()

# Show the plot
plt.tight_layout()
plt.show()
