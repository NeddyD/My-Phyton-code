# -*- coding: utf-8 -*-
"""
Created on Fri Feb 14 12:29:20 2025

@author: DELL
"""

#scatter plot with trendlines and statistical annotations
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import linregress

# Load data from an Excel file
file_path = "C:/Users/DELL/Documents/research_doctoral/data/updated_graph_local/no2_2024.05.01-2025.01.23.xlsx"  
sheet_name = "high+medium"
df = pd.read_excel(file_path, sheet_name=sheet_name, engine="openpyxl", parse_dates=["datetime"])

df = df.dropna(subset=['station', 'VCD'])  # Drop rows with NaN values in relevant columns

# Scatter plot with trendline and statistics
plt.figure(figsize=(10, 6))

# Scatter plot
ax = sns.scatterplot(x=df['station'], y=df['VCD'], color='blue', s=50)

# Force axes to start at 0
ax.set_xlim(left=0)  
ax.set_ylim(bottom=0)

# Compute regression line and statistics
slope, intercept, r_value, p_value, std_err = linregress(df['station'], df['VCD'])

# Add trendline
trendline = slope * df['station'] + intercept
plt.plot(df['station'], trendline, color='red', linestyle='--', label=f"Trendline (R² = {r_value**2:.2f})")

# Annotate statistical information
stats_text = f"R = {r_value:.2f}\nP-value = {p_value:.2e}\nStd Err = {std_err:.2f}"
plt.annotate(stats_text, xy=(0.05, 0.85), xycoords='axes fraction', fontsize=12, bbox=dict(boxstyle="round,pad=0.3", edgecolor='black', facecolor='white'))

# Labels and title
plt.xlabel('NO$_2$ surface concentration  (ug·m$^{-3}$')
plt.ylabel('NO$_2$ total VCDs (moles·m$^{-2}$)')

# Add legend
plt.legend()

# Show plot
plt.tight_layout()
plt.show()
